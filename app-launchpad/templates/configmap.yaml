apiVersion: v1
kind: ConfigMap
metadata:
  name: scripts-configmap
data:
  run-alp.sh: |-
    #!/bin/sh
    # Script to run App Launchpad as a container, use at your own risk, no support is given.
    # Clean up previous installations
    rpm -e vmware-alp
    
    rm -rf /etc/ALPEnvironments
    rm -rf /etc/ALPSystem
    rm -rf /opt/vmware/alp

    # Install ALP
    rpm -ivh /home/vmware-alp-2.1.1-19234432.ph3.x86_64.rpm

    # Setup ALP connections
    echo Setup ALP connections
    cat << EOF | alp connect --sa-user {{ .Values.alpConnect.saUser }} --sa-pass '{{ .Values.alpConnect.saPass }}' --url {{ .Values.alpConnect.url }} --admin-user {{ .Values.alpConnect.adminUser }} --admin-pass '{{ .Values.alpConnect.adminPass }}' --mqtt
    {{ .Values.alpConnect.eula }}

    EOF

    # Run again to accept any previous connections with VCD
    cat << EOF | alp connect --sa-user {{ .Values.alpConnect.saUser }} --sa-pass '{{ .Values.alpConnect.saPass }}' --url {{ .Values.alpConnect.url }} --admin-user {{ .Values.alpConnect.adminUser }} --admin-pass '{{ .Values.alpConnect.adminPass }}' --mqtt
    yes

    EOF
    
    # Run again to accept the TLS certificate
    cat << EOF | alp connect --sa-user {{ .Values.alpConnect.saUser }} --sa-pass '{{ .Values.alpConnect.saPass }}' --url {{ .Values.alpConnect.url }} --admin-user {{ .Values.alpConnect.adminUser }} --admin-pass '{{ .Values.alpConnect.adminPass }}' --mqtt
    yes

    EOF

    # Start deployer service
    echo start ALP Deployer service
    mkdir -p /opt/vmware/alp/deployer
    cd /opt/vmware/alp/deployer
    nohup /opt/vmware/alp/bin/deployer 2>&1 &
    sleep 5

    # Start ALP service
    echo Start ALP service
    cd /opt/vmware/alp
    nohup java $(cat /opt/vmware/alp/ALPJavaEnvironments | grep -Ev '^$|[#;]' | xargs) -jar /opt/vmware/alp/alp.jar --logging.path=log 2>&1 &

    sleep 5
    tail -f /opt/vmware/alp/log/alp-default.log -f /opt/vmware/alp/deployer/log/deployer/default.log
